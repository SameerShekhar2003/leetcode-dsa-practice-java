//Algorithm: HashMap-based single-pass search (Two Sum).

//Time Complexity: O(n).

//Space Complexity: O(n).


class Solution {
    public int[] twoSum(int[] nums, int target) {
        int n = nums.length;
        Map<Integer, Integer> map = new HashMap<>();
        for(int i=0; i<n; i++){
            int numToFind = target - nums[i];
            if(map.containsKey(numToFind)){
                return new int[]{map.get(numToFind), i};
            }
            map.put(nums[i], i);
        }

        
        return new int[]{};
    }
}
